{"version":3,"sources":["firedux/service/firedux.service.es6"],"names":[],"mappings":"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","file":"firedux/service/firedux.service.js","sourcesContent":["(function () {\n  'use strict';\n\n  class Service {\n    constructor($window, $fireduxAuth) {\n      this.firebase = $window.firebase;\n      this.$fireduxAuth = $fireduxAuth;\n    }\n    get auth() {\n      return this.$fireduxAuth.auth;\n    }\n    get TIMESTAMP() {\n      return this.database.ServerValue.TIMESTAMP;\n    }\n    get UID() {\n      return this.firebase\n        .database()\n        .ref('api')\n        .push()\n        .key;\n    }\n    get ref() {\n      return this.database().ref;\n    }\n    init(config) {\n      this.firebase.initializeApp(config);\n      this.hasInitialized = true;\n      this.database = this.firebase.database;\n      this.projectUrl = config.storageBucket;\n    }\n    reducer(params) {\n      if (angular.isString(params.trigger) && angular.isFunction(params.reducer)) {\n        if (this.reducers[params.trigger]) {\n          throw new Error('Couldn\\'t register reducer. Make sure all params are set up correctly.');\n        } else {\n          return this.registerReducer(params);\n        }\n        this.registerReducer(params);\n      } else {\n        throw new Error('Couldn\\'t register reducer. Make sure all params are set up correctly.');\n      }\n    }\n    registerReducer(params) {\n      this.reducers[params.trigger] = params.reducer;\n    }\n    dispatch(action) {\n      return this.reducers[action.type](action, this);\n    }\n    waitForAuth() {\n      return this.$fireduxAuth.waitForAuth();\n    }\n    login(provider, credentials, method) {\n      let loginPromise = Promise.reject(),\n          providerService;\n      switch (provider) {\n        case 'email':\n          loginPromise = this.$fireduxAuth\n            .signInWithEmailAndPassword(credentials);\n          break;\n        case 'anonymous':\n          loginPromise = this.$fireduxAuth\n            .signInAnonymously();\n          break;\n        case 'facebook':\n          providerService = this.$fireduxAuth\n            .getProvider('facebook');\n          break;\n        case 'twitter':\n          providerService = this.$fireduxAuth\n            .getProvider('twitter');\n          break;\n        default:\n          break;\n      }\n      switch (method) {\n        case 'popup':\n          loginPromise = this.$fireduxAuth\n            .signInWithPopup(providerService);\n          break;\n        case 'redirect':\n          loginPromise = this.$fireduxAuth\n            .signInWithRedirect(providerService);\n          break;\n        default:\n          break;\n      }\n      return loginPromise;\n    }\n  }\n  angular\n    .module('webcat.$firedux', [])\n    .service('$firedux', Service);\n}());\n"],"sourceRoot":"/source/"}