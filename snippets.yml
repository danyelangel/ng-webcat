- trigger: $firedux-init
  scope: javascript
  text: |
        var config = {
            apiKey: '${2}',
            authDomain: '${1}.firebaseapp.com',
            databaseURL: 'https://${1}.firebaseio.com',
            storageBucket: '${1}.appspot.com'
        };
        $firedux.init(config);
- trigger: $firedux-reducer
  scope: javascript
  text: |
        $firedux.reducer({
            trigger: '${1:TRIGGER}',
            reducer: ${2:reducer}
        });
- trigger: $firedux-TIMESTAMP
  scope: javascript
  text: |
        $firedux.var('TIMESTAMP')
- trigger: $firedux-UID
  scope: javascript
  text: |
        $firedux.var('UID')
- trigger: $firedux-ref
  scope: javascript
  text: |
        $firedux.ref()
- trigger: $firedux-auth-uid
  scope: javascript
  text: |
        $firedux.auth.uid()
            
- trigger: fd-api
  scope: jade
  text: |
        fd-api(
            fd-api-endpoint="${1:endpoint}"
            fd-api-request="{2:$ctrl.$request}"
            fd-api-array="{3:false}"
            then="${4}")
            catch
            
- trigger: fd-auth
  scope: jade
  text: |
        fd-auth(then="${1:$ctrl.$auth = $data}")
            before
            then
            catch
            
- trigger: fd-dispatcher
  scope: jade
  text: |
        fd-dispatcher(fd-dispatcher-action="${1:$ctrl.$action}")

- trigger: fd-env
  scope: jade
  text: |
        fd-env(
            fd-env-constant="${1:constant}"
            fd-env-array="${2:false}"
            then="${3:$data}")
            then

- trigger: fd-login_provider
  scope: jade
  text: |
        fd-login(
            fd-login-provider="${1:facebook}"
            fd-login-popup="${2:$mdMedia('gt-md')}"
            fd-login-redirect="!${2:$mdMedia('gt-md')}")
            then="${3:$data}"
            catch="${4:$error}")
            before
            then
            catch

- trigger: fd-login_email
  scope: jade
  text: |
        fd-login(
            fd-login-provider="${1:email}"
            fd-login-credentials="${2:credentials}")
            then="${3:$data}"
            catch="${4:$error}")
            before
            then
            catch
            
- trigger: fd-state
  scope: jade
  text: |
        fd-state(
            fd-state-path="${1:$ctrl.$path}"
            fd-state-query="${2:$ctrl.$query}"
            fd-state-array="${3:false}"
            then="${4:$data}"
            catch="${5:$error}")
            before
            then
            catch
            
- trigger: fd-upload
  scope: jade
  text: |
        fd-upload(
            fd-upload-file="${1:$file}"
            fd-upload-filename="${2}"
            before="${3:$data}"
            then="${4:$data}"
            catch="${5:$error}")
            before
            then
            catch
            
- trigger: wc-dialog-alert
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-alert="${1}"
            wc-dialog-labels="${2}")
            then
- trigger: wc-dialog-confirm
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-confirm="${1}"
            wc-dialog-labels="${2}")
            then
            catch
- trigger: wc-dialog-component
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-component="${1}"
            wc-dialog-labels="${2}")
            then
            catch   
- trigger: wc-dialog-login
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-login="${1}"
            wc-dialog-labels="${2}"
            then="${3}")
            then
            catch  
- trigger: wc-dialog-progress
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-progress="${1}"
            wc-dialog-labels="${2}")       
- trigger: wc-progress-linear
  scope: jade
  text: |
        wc-progress(wc-progress-type="linear")
- trigger: wc-progress-circular
  scope: jade
  text: |
        wc-progress(wc-progress-type="circular")
- trigger: wc-progress-linear-determinate
  scope: jade
  text: |
        wc-progress(
            wc-progress-type="linear"
            wc-progress-percentage="${1:percentage}")
- trigger: wc-progress-circular-determinate
  scope: jade
  text: |
        wc-progress(
            wc-progress-type="circular"
            wc-progress-percentage="${1:percentage}")
                
- trigger: wc-toast
  scope: jade
  text: |
        wc-toast(wc-toast-message="${1:message}")
- trigger: wc-ui-params
  scope: jade
  text: |
        wc-ui-params(
            then="$${1:params}=$data")      
- trigger: wc-ui-redirect
  scope: jade
  text: |
        wc-ui-redirect(wc-ui-redirect-sref="${1:state}")
- trigger: wc-ui-redirect-params
  scope: jade
  text: |
        wc-ui-redirect(
            wc-ui-redirect-sref="${1:state}"
            wc-ui-redirect-params="${2}")      
- trigger: wc-upload
  scope: jade
  text: |
        wc-upload(
            wc-upload-dimensions="${1}"
            wc-upload-multiple="${2}"
            then="$file"
            catch="$error")
            then
            catch
- trigger: fd-ref
  scope: jade
  text: |
        fd-ref(
            fd-ref-path="${1:$ctrl.$path}"
            fd-ref-query="${2:$ctrl.$query}"
            fd-ref-array="${3:false}"
            then="${4:$data}"
            catch="${5:$error}")
            before
            then
            catch
            
- trigger: fd-set
  scope: jade
  text: |
        fd-set(
            fdSetPath="${1:/}"
            fdSetData="${2}"
            fdSetPresence="${3:false}"
            catch="$error")
            before
            then
            catch
            