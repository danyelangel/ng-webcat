{"version":3,"sources":["firedux/service/firedux.service.es6"],"names":[],"mappings":"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","file":"firedux/service/firedux.service.js","sourcesContent":["(function () {\n  'use strict';\n\n  class Service {\n    constructor($window, $fireduxAuth) {\n      this.firebase = $window.firebase;\n      this.$fireduxAuth = $fireduxAuth;\n      this.reducers = [];\n    }\n    get auth() {\n      return this.$fireduxAuth.auth;\n    }\n    get TIMESTAMP() {\n      return this.firebase.database.ServerValue.TIMESTAMP;\n    }\n    get UID() {\n      return this.firebase\n        .database()\n        .ref('api')\n        .push()\n        .key;\n    }\n    var(variable) {\n      switch (variable) {\n        case 'UID':\n          return this.UID;\n        case 'TIMESTAMP':\n          return this.TIMESTAMP;\n        default:\n          return null;\n      }\n    }\n    ref(path) {\n      return this.database().ref(path);\n    }\n    storageRef(path) {\n      return this.firebase.storage().ref(path);\n    }\n    init(config) {\n      this.firebase.initializeApp(config);\n      this.hasInitialized = true;\n      this.$fireduxAuth.init(this.firebase);\n      this.database = this.firebase.database;\n      this.projectUrl = config.storageBucket;\n    }\n    reducer(params) {\n      if (angular.isString(params.trigger) && angular.isFunction(params.reducer)) {\n        if (this.reducers[params.trigger]) {\n          throw new Error('Couldn\\'t register reducer. Make sure all params are set up correctly.');\n        } else {\n          return this.registerReducer(params);\n        }\n        this.registerReducer(params);\n      } else {\n        throw new Error('Couldn\\'t register reducer. Make sure all params are set up correctly.');\n      }\n    }\n    registerReducer(params) {\n      this.reducers[params.trigger] = params.reducer;\n    }\n    dispatch(action) {\n      return this.reducers[action.type](action, this);\n    }\n    waitForAuth() {\n      return this.$fireduxAuth.waitForAuth();\n    }\n    login(provider, credentials, method) {\n      let loginPromise = Promise.reject(),\n          providerService;\n      switch (provider) {\n        case 'email':\n          loginPromise = this.$fireduxAuth\n            .signInWithEmailAndPassword(credentials);\n          break;\n        case 'anonymous':\n          loginPromise = this.$fireduxAuth\n            .signInAnonymously();\n          break;\n        case 'facebook':\n          providerService = this.$fireduxAuth\n            .getProvider('facebook');\n          break;\n        case 'twitter':\n          providerService = this.$fireduxAuth\n            .getProvider('twitter');\n          break;\n        default:\n          break;\n      }\n      switch (method) {\n        case 'popup':\n          loginPromise = this.$fireduxAuth\n            .signInWithPopup(providerService);\n          break;\n        case 'redirect':\n          loginPromise = this.$fireduxAuth\n            .signInWithRedirect(providerService);\n          break;\n        default:\n          break;\n      }\n      return loginPromise;\n    }\n    get stateParams() {\n      return this.stateParamsVar;\n    }\n    setParams(params) {\n      this.stateParamsVar = params;\n    }\n  }\n  angular\n    .module('firedux.service', [\n      'firedux.$fireduxAuth'\n    ])\n    .service('$firedux', Service);\n}());\n"],"sourceRoot":"/source/"}