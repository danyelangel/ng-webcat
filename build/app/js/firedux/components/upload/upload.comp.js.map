{"version":3,"sources":["firedux/components/upload/upload.comp.es6"],"names":[],"mappings":";;;;;;AAAA,AAAC,CAAA,YAAY;AACX,cAAY,CAAC;;MACP,UAAU;AACH,aADP,UAAU,CACF,QAAQ,EAAE;4BADlB,UAAU;;AAEZ,UAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;iBAHG,UAAU;;aAIJ,oBAAC,OAAO,EAAE;AAClB,YACE,OAAO,CAAC,YAAY,EACpB;AACA,cAAI,CAAC,MAAM,CACT,IAAI,CAAC,YAAY,EACjB,IAAI,CAAC,gBAAgB,CACtB,CAAC;SACH;OACF;;;aACK,gBAAC,IAAI,EAAE,QAAQ,EAAE;;;AACrB,YAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE;YACvC,UAAU,GAAG,UAAU,CACpB,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,OAAI,CAAC,KAAK,CAAC,CAAC,CAC3C,GAAG,CAAC,IAAI,CAAC,CAAC;AACjB,YAAI,CAAC,OAAO,GACZ,IAAI,CAAC,KAAK,GACV,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;AACxB,kBAAU,CACP,EAAE,CAAC,eAAe,EAAE,UAAA,QAAQ,EAAI;AAC/B,cAAI,QAAQ,GACV,QAAQ,CAAC,gBAAgB,GACzB,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;AAC5B,kBAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChC,iBAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,gBAAK,OAAO,GAAG,IAAI,CAAC;AACpB,gBAAK,MAAM,CAAC;AACV,qBAAS,EAAE,QAAQ;WACpB,CAAC,CAAC;AACH,gBAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;SACxB,EAAE,UAAA,GAAG,EAAI;AACR,gBAAK,MAAM,GAAG,IAAI,CAAC;AACnB,gBAAK,OAAO,GAAG,KAAK,CAAC;AACrB,gBAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvB,wBAAU,CAAC;AACT,kBAAM,EAAE,GAAG;WACZ,CAAC,CAAC;SACJ,CAAC,CAAC;AACL,kBAAU,CAAC,IAAI,CAAC,UAAA,SAAS,EAAI;AAC3B,gBAAK,KAAK,GAAG,IAAI,CAAC;AAClB,gBAAK,OAAO,GAAG,KAAK,CAAC;AACrB,gBAAK,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvB,gBAAK,IAAI,CAAC;AACR,iBAAK,EAAE;AACL,iBAAG,EAAE,SAAS,CAAC,GAAG,CAAC,QAAQ;AAC3B,iBAAG,EAAE,SAAS,CAAC,WAAW;aAC3B;WACF,CAAC,CAAC;SACJ,CAAC,CAAC;OACJ;;;WArDG,UAAU;;;AAuDhB,SAAO,CACJ,MAAM,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAC9B,SAAS,CAAC,UAAU,EAAE;AACrB,cAAU,EAAE,UAAU;AACtB,eAAW,EAAE,uCAAuC;AACpD,cAAU,EAAE;AACV,YAAM,EAAE,SAAS;AACjB,UAAI,EAAE,OAAO;AACb,eAAO,QAAQ;KAChB;AACD,YAAQ,EAAE;AACR,kBAAY,EAAE,GAAG;AACjB,sBAAgB,EAAE,GAAG;AACrB,UAAI,EAAE,GAAG;AACT,eAAO,GAAG;AACV,YAAM,EAAE,GAAG;KACZ;GACF,CAAC,CAAC;CACN,CAAA,EAAE,CAAE","file":"firedux/components/upload/upload.comp.js","sourcesContent":["(function () {\n  'use strict';\n  class Controller {\n    constructor($firedux) {\n      this.$firedux = $firedux;\n    }\n    $onChanges(changes) {\n      if (\n        changes.fdUploadFile\n      ) {\n        this.upload(\n          this.fdUploadFile,\n          this.fdUploadFilename\n        );\n      }\n    }\n    upload(file, filename) {\n      let storageRef = this.$firedux.storageRef(),\n          uploadTask = storageRef\n            .child(filename || this.$firedux.var('UID'))\n            .put(file);\n      this.$before =\n      this.$then =\n      this.$catch = undefined;\n      uploadTask\n        .on('state_changed', snapshot => {\n          let progress =\n            snapshot.bytesTransferred /\n            snapshot.totalBytes * 100;\n          progress = Math.floor(progress);\n          console.log(progress);\n          this.$before = true;\n          this.before({\n            $progress: progress\n          });\n          this.$firedux.$apply();\n        }, err => {\n          this.$catch = true;\n          this.$before = false;\n          this.$firedux.$apply();\n          this.catch({\n            $error: err\n          });\n        });\n      uploadTask.then(uploadRef => {\n        this.$then = true;\n        this.$before = false;\n        this.$firedux.$apply();\n        this.then({\n          $data: {\n            ref: uploadRef.ref.fullPath,\n            url: uploadRef.downloadURL\n          }\n        });\n      });\n    }\n  }\n  angular\n    .module('firedux.fdUpload', [])\n    .component('fdUpload', {\n      controller: Controller,\n      templateUrl: 'firedux/components/upload/upload.html',\n      transclude: {\n        before: '?before',\n        then: '?then',\n        catch: '?catch'\n      },\n      bindings: {\n        fdUploadFile: '<',\n        fdUploadFilename: '<',\n        then: '&',\n        catch: '&',\n        before: '&'\n      }\n    });\n}());\n"],"sourceRoot":"/source/"}