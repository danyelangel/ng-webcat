- trigger: $fd-init
  scope: javascript
  text: |
        var config = {
            apiKey: '${2}',
            authDomain: '${1}.firebaseapp.com',
            databaseURL: 'https://${1}.firebaseio.com',
            storageBucket: '${1}.appspot.com'
        };
        $firedux.init(config);
- trigger: $fd-reducer
  scope: javascript
  text: |
        $firedux.reducer({
            trigger: '${1:TRIGGER}',
            reducer: ${2:reducer}
        });
- trigger: $fd-TIMESTAMP
  scope: javascript
  text: |
        $firedux.var('TIMESTAMP')
- trigger: $fd-UID
  scope: javascript
  text: |
        $firedux.var('UID')
- trigger: $fd-ref
  scope: javascript
  text: |
        $firedux.ref()
- trigger: $fd-auth-uid
  scope: javascript
  text: |
        $firedux.auth.uid()
            
- trigger: fd-api
  scope: jade
  text: |
        fd-api(
            fd-api-endpoint="${1:endpoint}"
            fd-api-request="${2:$ctrl.$request}"
            fd-api-array="${3:false}"
            then="${4}")
            before
            catch
            
- trigger: fd-dispatcher
  scope: jade
  text: |
        fd-dispatcher(
          fd-dispatcher-action=`{
            type: '${1}'
          }`)
          before
          catch
          then
          
- trigger: fd-dispatch-all
  scope: jade
  text: |
        fd-dispatcher(
          fd-dispatcher-actions=`[
            {
              type: '${1}'
            }
          ]`)
          before
          catch
          then
          

- trigger: fd-auth
  scope: jade
  text: |
        fd-auth(then="${1:$ctrl.$auth = $data}")
            before
            then
            catch
            
- trigger: fd-img-resize
  scope: jade
  text: |
        fd-img-resize(
          fd-img-url="${1}"
          fd-img-size="")
- trigger: fd-login_provider
  scope: jade
  text: |
        fd-login(
            fd-login-provider="${1:facebook}"
            fd-login-popup="${2:$mdMedia('gt-md')}"
            fd-login-redirect="!${2:$mdMedia('gt-md')}")
            then="${3:$data}"
            catch="${4:$error}")
            before
            then
            catch

- trigger: fd-login_email
  scope: jade
  text: |
        fd-login(
            fd-login-provider="${1:email}"
            fd-login-credentials="${2:credentials}")
            then="${3:$data}"
            catch="${4:$error}")
            before
            then
            catch
            
- trigger: fd-ref
  scope: jade
  text: |
        fd-ref(
            fd-ref-path="${1}"
            then="$data"
            catch="$error")
            before
            catch
            then

- trigger: fd-ref-array
  scope: jade
  text: |
        fd-ref(
            fd-ref-path="${1}"
            fd-ref-array="true"
            then="$data"
            catch="$error")
            before
            catch
            then

- trigger: fd-ref-query
  scope: jade
  text: |
        fd-ref(
            fd-ref-path="${1}"
            fd-ref-query="${2}"
            fd-ref-array="true"
            then="${4:$data}"
            catch="${5:$error}")
            before
            catch
            then
            
- trigger: fd-ref-paths
  scope: jade
  text: |
        fd-ref(
            fd-ref-paths=`[
              ${1}
            ]`
            then="$data")
            before
            catch
            then
            
- trigger: fd-set
  scope: jade
  text: |
        fd-set(
            fdSetPath="${1:/}"
            fdSetData="${2}"
            fdSetPresence="${3:false}"
            catch="$error")
            before
            then
            catch
            
- trigger: fd-timeout
  scope: jade
  text: |
        fd-timeout(
          fd-timeout-time="${1:1000}")
          then

- trigger: fd-upload
  scope: jade
  text: |
        fd-upload(
            fd-upload-file="${1:$file}"
            fd-upload-filename="${2}"
            before="${3:$data}"
            then="${4:$data}"
            catch="${5:$error}")
            before
            then
            catch
            
- trigger: fd-user
  scope: jade
  text: |
        fd-user(then="$ctrl.$auth = $data")
            before
            then
            catch
            
- trigger: fd-value
  scope: jade
  text: |
        fd-value(
            fd-value-id="${1}"
            fd-value-data=""
            then="${2:$data}")
- trigger: wc-dialog-alert
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-alert="${1}"
            wc-dialog-labels="${2}")
            then
- trigger: wc-dialog-confirm
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-confirm="${1}"
            wc-dialog-labels="${2}")
            then
            catch
- trigger: wc-dialog-component
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-component="${1}"
            wc-dialog-labels="${2}")
            then
            catch   
- trigger: wc-dialog-login
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-login="${1}"
            wc-dialog-labels="${2}"
            then="${3}")
            then
            catch  
- trigger: wc-dialog-progress
  scope: jade
  text: |
        wc-dialog(
            wc-dialog-progress="${1}"
            wc-dialog-labels="${2}")      
            
- trigger: wc-dialog-template
  scope: jade
  text: |
        wc-dialog(wc-dialog-template)
          wc-dialog-template
          
- trigger: wc-dialog-prompt
  scope: jade
  text: |
        wc-dialog(
          wc-dialog-prompt="true"
          wc-dialog-labels="{title: '${1}'}"
          then="${2}")
          then
- trigger: wc-identicon
  scope: jade
  text: |
        wc-identicon(
            wc-identicon-email="${1}"
            then="$data")
            then
- trigger: wc-menu
  scope: jade
  text: |
        wc-menu(
          wc-icon="more_vert"
          wc-align="end"
          wc-width="3")
          wc-menu-item(
            wc-icon="add"
            on-click="")
            |Plop

- trigger: wc-panel
  scope: jade
  text: |
        wc-panel(
          wc-panel-trigger=".trigger"
          wc-panel-modal="false"
          wc-panel-backdrop="true"
          wc-panel-align="start start"
          wc-panel-animation="fade"
          catch="$ctrl.openPanel = false")
          wc-panel-template

- trigger: wc-progress
  scope: jade
  text: |
        wc-progress(wc-progress-type="${1:linear}")
- trigger: wc-progress-determinate
  scope: jade
  text: |
        wc-progress(
            wc-progress-type="${1:linear}"
            wc-progress-percentage="")
                
- trigger: wc-rating
  scope: jade
  text: |
        wc-rating(
            wc-total-score=""
            wc-user-score=""
            then="$data")
            empty
            half
            full
            catch
- trigger: wc-text
  scope: jade
  text: |
        wc-text(
            wc-data=""
            wc-rich="false"
            wc-placeholder=""
            wc-disabled="false"
            wc-href: ""
            then="$data")
- trigger: wc-toast
  scope: jade
  text: |
        wc-toast(wc-toast-message="${1:message}")
- trigger: wc-ui-redirect
  scope: jade
  text: |
        wc-ui-redirect(
          wc-ui-redirect-sref="${1:state}")
- trigger: wc-ui-redirect-replace
  scope: jade
  text: |
        wc-ui-redirect(
            wc-ui-redirect-sref="${1:state}"
            wc-ui-replace="true") 
- trigger: wc-ui-redirect-params
  scope: jade
  text: |
        wc-ui-redirect(
            wc-ui-redirect-sref="${1:state}"
            wc-ui-redirect-params="${2}")      
- trigger: wc-ui-params
  scope: jade
  text: |
        wc-ui-params(
            then="$${1:params}=$data")      
- trigger: wc-upload
  scope: jade
  text: |
        wc-upload(
            wc-upload-dimensions="${1}"
            wc-upload-multiple="${2}"
            then="$file"
            catch="$error")
            then
            catch