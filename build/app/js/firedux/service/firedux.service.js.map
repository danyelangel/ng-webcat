{"version":3,"sources":["firedux/service/firedux.service.es6"],"names":[],"mappings":"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","file":"firedux/service/firedux.service.js","sourcesContent":["(function () {\n  'use strict';\n  class ValueObserver {\n    constructor() {\n      this.callbacks = [];\n    }\n    set(data) {\n      this.data = data;\n      angular.forEach(this.callbacks, callback => {\n        callback(this.data);\n      });\n    }\n    get() {\n      return this.data;\n    }\n    watch(callback) {\n      this.callbacks.push(callback);\n      callback(this.data);\n      return () => {\n        let index = this.callbacks.indexOf(callback);\n        this.callbacks.splice(index, 1);\n      };\n    }\n  }\n\n  class Service {\n    constructor(\n      $window,\n      $document,\n      $fireduxAuth,\n      $fireduxAnalytics,\n      $fireduxStorage,\n      $timeout,\n      $rootScope\n    ) {\n      this.$window = $window;\n      this.$document = $document;\n      this.firebase = $window.firebase;\n      this.$fireduxAuth = $fireduxAuth;\n      this.$fireduxAnalytics = $fireduxAnalytics;\n      this.$fireduxStorage = $fireduxStorage;\n      this.reducers = [];\n      this.$scope = $rootScope;\n      this.$timeout = $timeout;\n      this.isDispatching = {};\n      this.vals = {};\n    }\n    // Initialization\n    init(params, analytics, pixel) {\n      this.onlyRedirect = params.redirect;\n      if (\n        angular.isObject(params) &&\n        angular.isObject(params.config) &&\n        angular.isString(params.config.apiKey)\n      ) {\n        this.firebase.initializeApp(params.config);\n        this.initialize(params.config, params.base);\n        this.$fireduxAnalytics\n          .init(params.analytics, params.pixel);\n        this.val('PROJECT_ID').set(params.config.authDomain.split('.')[0]);\n      } else if (\n        angular.isObject(params) &&\n        angular.isString(params.apiKey)\n      ) {\n        console.warn('$firedux.initialize(firebaseConfig) is being deprecated. Please use $firedux.initialize({config: firebaseConfig})');\n        this.firebase.initializeApp(params);\n        this.initialize(params);\n        this.$fireduxAnalytics\n          .init(analytics, pixel);\n      }\n    }\n    initialize(params, base = '/') {\n      this.refBase = base;\n      this.val('PROJECT_ID').set(params.authDomain.split('.')[0]);\n      this.hasInitialized = true;\n      this.$fireduxAuth\n        .init(this.firebase);\n      this.database = this.firebase.database;\n      this.projectUrl = params.storageBucket;\n      this.waitForAuth((authData) => {\n        if (authData) {\n          this\n            .ref('users')\n            .child(authData.uid)\n            .on('value', snap => {\n              this.user = snap.val();\n            });\n        }\n      });\n    }\n    // Constants\n    var(variable) {\n      switch (variable) {\n        case 'UID':\n          return this.UID;\n        case 'TIMESTAMP':\n          return this.TIMESTAMP;\n        default:\n          return null;\n      }\n    }\n    get auth() {\n      return this.$fireduxAuth.auth || {};\n    }\n    get TIMESTAMP() {\n      return this.firebase.database.ServerValue.TIMESTAMP;\n    }\n    get UID() {\n      return this.firebase\n        .database()\n        .ref('api')\n        .push()\n        .key;\n    }\n    // ValueObserver\n    val(valId) {\n      if (!this.vals[valId]) {\n        this.vals[valId] = new ValueObserver();\n      }\n      return this.vals[valId];\n    }\n    // Analytics\n    analytics() {\n      return this.$fireduxAnalytics;\n    }\n    // Database\n    ref(path = '/') {\n      return this.database().ref(this.refBase).child(path);\n    }\n    api(endpoint) {\n      return {\n        call: request => {\n          let UID = this.UID;\n          return this.ref('api')\n            .child(endpoint)\n            .child(UID)\n            .set({\n              request,\n              timestamp: this.TIMESTAMP\n            })\n            .then(() => {\n              return new Promise((resolve, reject) => {\n                this.ref('api')\n                  .child(endpoint)\n                  .child(UID)\n                  .child('response')\n                  .on('value', response => {\n                    this.$timeout(() => {\n                      reject('API timed out');\n                    }, 10000);\n                    if (response) {\n                      this.ref('api')\n                        .child(endpoint)\n                        .child(UID)\n                        .child('response')\n                        .off();\n                      this.ref('api')\n                        .child(endpoint)\n                        .child(UID)\n                        .set(null);\n                      resolve(response.val());\n                    }\n                  });\n              });\n            });\n        }\n      };\n    }\n    parseArray(array) {\n      let returnable = {};\n      if (angular.isArray(array)) {\n        angular.forEach(array, item => {\n          returnable[this.UID] = item;\n        });\n      }\n      return returnable;\n    }\n    // Storage\n    storage() {\n      return this.$fireduxStorage;\n    }\n    storageRef(path) {\n      return this.storage().ref(path);\n    }\n    // Redux\n    reducer(params) {\n      if (angular.isString(params.trigger) && angular.isFunction(params.reducer)) {\n        if (this.reducers[params.trigger]) {\n          throw new Error('Couldn\\'t register reducer. Make sure all params are set up correctly.');\n        } else {\n          return this.registerReducer(params);\n        }\n        this.registerReducer(params);\n      } else {\n        throw new Error('Couldn\\'t register reducer. Make sure all params are set up correctly.');\n      }\n    }\n    registerReducer(params) {\n      this.reducers[params.trigger] = params.reducer;\n    }\n    dispatch(action, log = true) {\n      return new Promise((resolve, reject) => {\n        if (!this.isDispatching[action.type]) {\n          this.isDispatching[action.type] = true;\n          if (angular.isDefined(this.reducers[action.type])) {\n            if (log) {\n              console.groupCollapsed(`${action.type}`);\n              console.log(action);\n            }\n            try {\n              this.reducers[action.type](action, this)\n                .then(payload => {\n                  if (log) {\n                    console.log(`Reducer resolved`);\n                    console.groupEnd();\n                  }\n                  this.$scope.$emit('fd:action', action.type);\n                  this.isDispatching[action.type] = false;\n                  resolve(payload);\n                })\n                .catch(err => {\n                  err = err || 'UNDEFINED ERROR';\n                  if (log) {\n                    console.groupEnd();\n                    console.warn(`Reducer ${action.type} threw this error: `, err);\n                  }\n                  this.isDispatching[action.type] = false;\n                  this.$scope.$emit('fd:error', `${action.type}: ${err}`);\n                  reject(err);\n                });\n            } catch (err) {\n              this.isDispatching[action.type] = false;\n              if (log) {\n                console.groupEnd();\n              }\n              this.$scope.$emit('fd:error', `${action.type}: ${err}`);\n              if (log) {\n                console.warn(`Reducer ${action.type} threw this synchronous error: `, err);\n              }\n              reject(err);\n            }\n          } else {\n            this.isDispatching[action.type] = false;\n            if (log) {\n              console.warn('Reducer ' + action.type + ' is not registered');\n            }\n            reject('Reducer ' + action.type + ' is not registered');\n          }\n        } else {\n          this.isDispatching[action.type] = false;\n          if (log) {\n            console.warn('Firedux is already dispatching this action: ' + action.type);\n          }\n          reject('Firedux is already dispatching this action: ' + action.type);\n        }\n      });\n    }\n    dispatchGroup(actions, log = true) {\n      let promises = [],\n          promiseTypes = '';\n      angular.forEach(actions, action => {\n        promiseTypes = promiseTypes + ', ' + action.type;\n        promises.push(this.dispatch(action, false));\n      });\n      if (log) {\n        console.groupCollapsed(`${promiseTypes}`);\n        angular.forEach(actions, action => {\n          console.log(action);\n        });\n      }\n      return Promise\n        .all(promises)\n        .then(() => {\n          if (log) {\n            console.log(`All reducers resolved`);\n            console.groupEnd();\n          }\n        })\n        .catch(err => {\n          err = err || 'UNDEFINED ERROR';\n          if (log) {\n            console.groupEnd();\n            console.warn(`One reducer threw this error: `, err);\n          }\n        });\n    }\n    // Auth\n    waitForAuth(success, error) {\n      return this.$fireduxAuth.waitForAuth(success, error);\n    }\n    register(credentials) {\n      return this.$fireduxAuth.register(credentials).then(() => {\n        return this.login('email', credentials);\n      });\n    }\n    login(provider, credentials, method) {\n      let loginPromise,\n          providerService;\n      switch (provider) {\n        case 'email':\n          loginPromise = this.$fireduxAuth\n            .signInWithEmailAndPassword(credentials);\n          break;\n        case 'anonymous':\n          loginPromise = this.$fireduxAuth\n            .signInAnonymously();\n          break;\n        case 'facebook':\n          providerService = this.$fireduxAuth\n            .getProvider('facebook');\n          break;\n        case 'google':\n          providerService = this.$fireduxAuth\n            .getProvider('google');\n          break;\n        case 'twitter':\n          providerService = this.$fireduxAuth\n            .getProvider('twitter');\n          break;\n        default:\n          loginPromise = Promise.reject();\n          break;\n      }\n      if (providerService) {\n        switch (this.onlyRedirect ? 'redirect' : method) {\n          case 'popup':\n            loginPromise = this.$fireduxAuth\n              .signInWithPopup(providerService);\n            break;\n          case 'redirect':\n            loginPromise = this.$fireduxAuth\n              .signInWithRedirect(providerService);\n            break;\n          default:\n            break;\n        }\n      }\n      return loginPromise;\n    }\n    link(provider, credentials, method) {\n      let linkPromise,\n          providerService;\n      switch (provider) {\n        case 'email':\n          providerService = this.$fireduxAuth\n            .getProvider('email', credentials);\n          break;\n        case 'facebook':\n          providerService = this.$fireduxAuth\n            .getProvider('facebook');\n          break;\n        case 'google':\n          providerService = this.$fireduxAuth\n            .getProvider('google');\n          break;\n        case 'twitter':\n          providerService = this.$fireduxAuth\n            .getProvider('twitter');\n          break;\n        default:\n          linkPromise = Promise.reject();\n          break;\n      }\n      if (providerService) {\n        switch (method) {\n          case 'redirect':\n            linkPromise = this.$fireduxAuth\n              .linkWithRedirect(providerService);\n            break;\n          default:\n            break;\n        }\n        if (provider === 'email') {\n          linkPromise = this.$fireduxAuth\n              .link(providerService);\n        }\n      }\n      return linkPromise;\n    }\n    updatePassword(oldPassword, newPassword) {\n      return this\n        .$fireduxAuth\n        .updatePassword(\n          oldPassword,\n          newPassword);\n    }\n    updateProfile(profile) {\n      return this\n        .$fireduxAuth\n        .updateProfile(profile);\n    }\n    logout() {\n      this.$fireduxAuth.logout();\n    }\n    // For deprecation\n    setParams(params) {\n      console.error('$firedux.setParams is being deprecated. Please update your code accordingly.');\n      this.stateParams = params;\n    }\n    // Util\n    $apply() {\n      this.$timeout(() => {\n        this.$scope.$apply();\n      });\n    }\n  }\n  angular\n    .module('firedux.service', [\n      'firedux.auth',\n      'firedux.analytics',\n      'firedux.storage'\n    ])\n    .service('$firedux', Service);\n}());\n"],"sourceRoot":"/source/"}